# Generated by Django 4.2 on 2023-04-13 21:21

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stack_eng', '0015_remove_like_answer_remove_like_question_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestionLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_date', models.DateTimeField(default=datetime.datetime(2023, 4, 13, 23, 21, 33, 996663))),
                ('liked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='answer',
            name='points',
        ),
        migrations.RemoveField(
            model_name='question',
            name='likes',
        ),
        migrations.RemoveField(
            model_name='question',
            name='points',
        ),
        migrations.AlterField(
            model_name='answer',
            name='pub_date',
            field=models.DateTimeField(default=datetime.datetime(2023, 4, 13, 23, 21, 33, 995536)),
        ),
        migrations.AlterField(
            model_name='comment',
            name='pub_date',
            field=models.DateTimeField(default=datetime.datetime(2023, 4, 13, 23, 21, 33, 996560)),
        ),
        migrations.AlterField(
            model_name='question',
            name='pub_date',
            field=models.DateTimeField(default=datetime.datetime(2023, 4, 13, 23, 21, 33, 994126)),
        ),
        migrations.DeleteModel(
            name='Like',
        ),
        migrations.AddField(
            model_name='questionlike',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like', to='stack_eng.question'),
        ),
        migrations.AlterUniqueTogether(
            name='questionlike',
            unique_together={('question', 'liked_by')},
        ),
    ]
